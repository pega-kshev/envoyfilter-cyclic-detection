name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup_services:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.23'

      # Install necessary dependencies
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y conntrack
          curl -LO https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.31.0/crictl-v1.31.0-linux-amd64.tar.gz
          sudo tar zxvf crictl-v1.31.0-linux-amd64.tar.gz -C /usr/local/bin
          rm -f crictl-v1.31.0-linux-amd64.tar.gz

      # Install cri-dockerd
      - name: Install cri-dockerd
        run: |
          sudo apt-get install -y golang-go
          git clone https://github.com/Mirantis/cri-dockerd.git
          cd cri-dockerd
          mkdir bin
          go build -o bin/cri-dockerd
          sudo mv bin/cri-dockerd /usr/local/bin/
          cd ..
          rm -rf cri-dockerd

      # Set up Minikube
      - name: Set up Minikube
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube /usr/local/bin/
          minikube start --driver=none

      # Install Istio
      - name: Install Istio
        run: |
          curl -L https://istio.io/downloadIstio | ISTIO_VERSION=1.11.4 sh -
          cd istio-1.11.4
          export PATH=$PWD/bin:$PATH
          istioctl install --set profile=demo -y
          kubectl label namespace default istio-injection=enabled

      # Set up Helm
      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      # Deploy services using Helm
      - name: Deploy Services
        run: |
          helm upgrade --install test-services ./test-services

      # Apply EnvoyFilter
      - name: Apply EnvoyFilter
        run: |
          kubectl apply -f envoyfilter.yaml

  run_tests:
    runs-on: ubuntu-latest
    needs: setup_services

    steps:
      - uses: actions/checkout@v2

      - name: Install JMeter
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jre
          wget https://downloads.apache.org//jmeter/binaries/apache-jmeter-5.4.1.tgz
          tar -xvzf apache-jmeter-5.4.1.tgz
          export JMETER_HOME=$(pwd)/apache-jmeter-5.4.1
          export PATH=$PATH:$JMETER_HOME/bin

      - name: Run JMeter Tests
        run: |
          jmeter -n -t test_plan.jmx -l results.jtl

      - name: Check Test Results
        run: |
          cat results.jtl

  test_envoy_filter:
    runs-on: ubuntu-latest
    needs: setup_services

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Requests Library
        run: |
          python -m pip install requests

      - name: Run Envoy Filter Test
        run: |
          python test_envoy_filter.py